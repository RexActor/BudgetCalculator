@model BudgetCalculator.Models.WeeklyBudget;
@using BudgetCalculator.Finance.Calendar;
@*
	For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{

	ViewData["Title"] = "Budget View";
	var firstDate = new DateTime(Model.Budget.Year - 1, 12, 31);

	var weekComencingDate = @firstDate.AddDays((@Model.WeekNumber - 1) * 7);

	int monthIndex = @FinanceCalendar.FinanceCalendarWeekModel.Keys.ToList().IndexOf(Model.MonthName);

}
<div class="row">

	<div class="modal-title text-center">
		<h2>@Model.Budget.MonthName Week @Model.WeekNumber Daily Split</h2>
	</div>


	@for (int i = 0; i < 7; i++)
	{

		var dayofWeek = @weekComencingDate.AddDays(i).DayOfWeek;
		var dateOfDay = @weekComencingDate.AddDays(i).ToShortDateString();

		<div class="col-md-5 col-xs-6 border-primary mb-3 g-3" style="font-size:14px;">

			<div class="card">

				<div class="row bg-light g-0 ">


					<div class="card-header">
						<h3 class="text-center card-title ">
							<span class="fw-bolder">@dayofWeek</span>
							<span class="fs-5 fw-bolder text-secondary text-decoration-underline">@dateOfDay</span>
						</h3>

					</div>



					<div class="col-md-6">
						<div class="card-body">


							<p class="card-text text-secondary"><b>WC date:</b><span class="text-success fw-bolder"> @weekComencingDate.ToShortDateString()</span> </p>
							<p class="card-text text-secondary"><b>Week:</b><span class="text-success fw-bolder"> @Model.WeekNumber</span></p>
							<p class="card-text text-secondary"><b>Month:</b><span class="text-success fw-bolder"> @Model.MonthName</span></p>


						</div>
					</div>

					<div class="col-md-6">
						<div class="card-body">

							@{
								double TotalWeeklyProductiveHours = (Model.AgencyProductiveHours + Model.DirectProductiveHours);
								double allowedMinutesPerCase = Math.Round(((TotalWeeklyProductiveHours / (float)Model.Cases)) * 60, 3);
								double TotalMinutes = Math.Round(Model.Cases * allowedMinutesPerCase, 3);
								double TotalHoursAllowed = Math.Round(TotalMinutes / 60, 3);
							}

							<div class="form-floating">
								<input class="form-control-sm mb-2 " title="Number of Cases/Day" placeholder="Number of Cases/Day" />
							</div>

							<p class="card-text text-secondary"><b>Av. Monthly mins/case:</b><span class="text-success fw-bolder"> @allowedMinutesPerCase</span></p>
							<p class="card-text text-secondary"><b>Total Minutes:</b> {minutes}</p>
							<p class="card-text text-secondary"><b>Hours Allowed:</b> {hours}</p>

						</div>

					</div>


					<div class="row">

						<div class="col-md-12">


							<p class="text-decoration-underline"><b>DIRECT HC Only Input</b></p>

							<table class="table table-borderless text-center">
								<thead>
									<tr class="table-bordered text-secondary" style="border-bottom: thin solid; border-color:gray;">
										<th title="Cost Center">CC</th>
										<th>Direct Role</th>
										<th title="Head Count">HC</th>
										<th>Hrs shift/person</th>
										<th>Total Hours</th>
									</tr>
								</thead>


								<tbody>

									@foreach (var departmentRole in ViewBag.RolesList)
									{

										<tr class="text-success fw-bolder ">
											<td class="" title="Cost Center">@Model.CostCenter.Name</td>
											<td class="">@departmentRole</td>
											<td class="" title="Head Count"><input class="form-control m-auto" type="number" placeholder="0" style="width:80px;"></td>
											<td class=""><input class="form-control  m-auto" type="number" placeholder="0" style="width:80px;"></td>
											<td class="">{total Hours}</td>
										</tr>
									}


									<tr>
										<td></td>
										<td class="text-end text-secondary" style="border-bottom: thin solid; border-color:gray;" colspan="2"><b>Direct Hours:</b></td>
										<td></td>
										<td class="text-center" style="border-bottom: thin solid; border-color:gray;"><span class="fw-bolder">{total Hours}</span></td>

									</tr>


									<tr>
										<td class="text-end text-secondary" colspan="3"><b>Agency Hours:</b></td>
										<td class="text-center"><span class="fw-bolder">{total Hours}</span></td>
										<td></td>
									</tr>
									<tr>
										<td></td>
										<td class="text-end text-secondary" style="border-bottom: thin solid; border-color:gray;" colspan="2"><b>Agency Available:</b></td>
										<td class="text-center" style="border-bottom: thin solid; border-color:gray;" colspan="1"><span class="fw-bolder">{Head Count}</span></td>
										<td></td>
									</tr>



								</tbody>

							</table>





						</div>


					</div>
					<div class="card-footer g-0 text-end text-muted" style="font-size:0.8rem;">
						<span>

							Last Updated: @DateTime.Now.ToLongDateString() by {User}


						</span>
					</div>

				</div>







			</div>
		</div>
	}
</div>


@{
	var controller = ViewContext.RouteData.Values["controller"];
}
@section header{


	<div class="text-white align-text-top">
		<a class="btn  btn-secondary" asp-controller="@controller" asp-action="Weekly" asp-action="Weekly" asp-route-year="@Model.Budget.Year" asp-route-costCenterId="@Model.Budget.CostCenter.Id" asp-route-monthIndex="@monthIndex">
			<i class="bi bi-calendar-week" style=" vertical-align: 0.130em;"></i> Return To @Model.MonthName weekly view
		</a>


	</div>
}